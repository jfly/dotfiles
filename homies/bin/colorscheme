#!/usr/bin/env bash

set -euo pipefail
shopt -s globstar # enable ** glob expansion

cd "$(dirname "$0")"

function get_terminal_pid() {
    local terminal_pid

    terminal_pid=""
    # First search for an ancestor terminal process.
    terminal_pid=$(pstree -spl $$ | grep -Eo 'alacritty\([0-9]+\)' | grep -o '[0-9]*' | tail -1)

    # If there isn't an ancestor terminal process, then look at the currently
    # focused window, but make sure it's a terminal process and not some poor
    # other process.
    if [ -z "$terminal_pid" ]; then
        terminal_pid=$(xdotool getwindowpid "$(xdotool getwindowfocus)")
        exe_name=$(basename "$(readlink "/proc/${terminal_pid}/exe")")
        if [ "$exe_name" != "alacritty" ]; then
            echo "The currently focused window is: '${exe_name}', but I expected 'alacritty'"
            exit 1
        fi
    fi

    echo "$terminal_pid"
}

function get_json_colorscheme() {
    local colorscheme=$1
    local file
    file=$(ls ~/.dotfiles/colorschemes/**/"$colorscheme.yml" 2>/dev/null)
    yq .colors "$file"
}

function get_available_colorschemes() {
    for f in ~/.dotfiles/colorschemes/**/*.yml; do
        f="$(basename "$f")"
        echo "${f%.yml}"
    done
}

# From http://stackoverflow.com/a/8064551
listcontains() {
    for word in $1; do
        [[ $word == "$2" ]] && return 0
    done
    return 1
}

# Validate command line arguments
print_usage_and_exit() {
    local name
    name=$(basename "$0")
    echo "## Usage"
    echo ""
    echo "    $name [current|global] [colorscheme]"
    echo "    $name list"
    echo ""
    echo "## Examples"
    echo ""
    echo "### Set the colorscheme for the current terminal"
    echo ""
    echo "    $name current light"
    echo ""
    echo "### Get a list of available colorschemes"
    echo ""
    echo "    $name list"
    exit 1
}
if [ $# -eq 0 ]; then
    print_usage_and_exit
fi

location=$1
shift

if listcontains "list ls" "$location"; then
    get_available_colorschemes
    exit 0
fi

if [ $# -eq 0 ]; then
    print_usage_and_exit
fi

colorscheme=$1
shift

if [ "$location" = "current" ]; then
    location=$(get_terminal_pid)
elif [ "$location" = "global" ]; then
    location="global"
else
    echo "Unrecognized location: $location"
fi

with-alacritty set "$location" "{\"colors\": $(get_json_colorscheme "$colorscheme")}"

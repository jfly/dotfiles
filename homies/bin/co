#!/usr/bin/env python

import sys
from gitlib import parse_remote
import subprocess
from pathlib import Path
import argparse

def main():
    parser = argparse.ArgumentParser()
    parser.add_argument("remote")
    parser.add_argument('--dry-run', action='store_true', help="do nothing, just print what would happen")
    args = parser.parse_args()

    if args.dry_run:
        print("Beginning a dry run.", file=sys.stderr)
        print()

    clone(args.remote, dry_run=args.dry_run)

    if args.dry_run:
        print()
        print("Note: That was a dry run, nothing actually happened!", file=sys.stderr)

def clone(remote: str, dry_run: bool):
    heirarchy = parse_remote(remote)
    if heirarchy is None:
        assert False, f"couldn't understand {remote}"

    target = Path(Path.home(), "src").joinpath(*heirarchy)
    target.parent.mkdir(parents=True, exist_ok=True)
    if not dry_run:
        subprocess.check_call(['git', 'clone', remote], cwd=target.parent, stdout=subprocess.DEVNULL)
    print(target)


if __name__ == "__main__":
    main()

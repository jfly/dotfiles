# Path to your oh-my-zsh installation.
export ZSH=~/.oh-my-zsh

# Set name of the theme to load. Optionally, if you set this to "random"
# it'll load a random theme each time that oh-my-zsh is loaded.
# See https://github.com/robbyrussell/oh-my-zsh/wiki/Themes
# ZSH_THEME="robbyrussell"
ZSH_THEME="powerlevel10k/powerlevel10k"

if [ "$ZSH_THEME" = "powerlevel10k/powerlevel10k" ]; then
  ### Powerlevel10k
  # Enable Powerlevel10k instant prompt. Should stay close to the top of ~/.zshrc.
  # Initialization code that may require console input (password prompts, [y/n]
  # confirmations, etc.) must go above this block; everything else may go below.
  if [[ -r "${XDG_CACHE_HOME:-$HOME/.cache}/p10k-instant-prompt-${(%):-%n}.zsh" ]]; then
    source "${XDG_CACHE_HOME:-$HOME/.cache}/p10k-instant-prompt-${(%):-%n}.zsh"
  fi
  # To customize prompt, run `p10k configure` or edit ~/.p10k.zsh.
  [[ ! -f ~/.p10k.zsh ]] || source ~/.p10k.zsh
fi

plugins=(git)
plugins+=(z)
plugins+=(sd)

source $ZSH/oh-my-zsh.sh

# User configuration

source ~/.commonrc/commonrc

###
### Set prompt (copied and modified from ~/.oh-my-zsh/themes/robbyrussell.zsh-theme)
###
local host=""
if [ -n "$SSH_CLIENT" ] || [ -n "$SSH_TTY" ]; then
  host=" @%M"
fi
local ret_status="%(?:%{$fg_bold[green]%}➜ :%{$fg_bold[red]%}➜ )"
export PROMPT='${ret_status}${host} %{$fg[cyan]%}%~%{$reset_color%} $(git_prompt_info)'
#####################

###
### Set up FZF
###
source /usr/share/fzf/key-bindings.zsh
source /usr/share/fzf/completion.zsh

###
### Don't add comments starting with space to the history.
###
setopt HIST_IGNORE_SPACE

###
### Bash-like navigation
### Copied from: https://stackoverflow.com/a/10860628/1739415
### Also see https://stackoverflow.com/a/3483679/1739415
###

# Bind ctrl-u to cut to beginning of line.
bindkey "^U" backward-kill-line

# Change behavior of alt-b and alt-f to behave more like bash with regards to
# trailing whitespace.
autoload -Uz forward-word-match
zle -N forward-word forward-word-match
zstyle ':zle:*' skip-whitespace-first true
zstyle ':zle:*' word-chars ''

# Hide files from make autocompletion suggestions.
zstyle ':completion:*:*:make:*' tag-order 'targets'

# Bind alt-backspace to delete one not so aggressive word backwards.
bindkey '^[^?' backward-kill-word

### Bind ctrl-w to delete one aggressive word backwards.
backward-kill-dir() {
    local WORDCHARS='*?_-.[]~=&;!#$%^(){}<>'
    zle backward-kill-word
}
zle -N backward-kill-dir
bindkey "^W" backward-kill-dir

#####################

###
### Fix output of time to look more like bash.
### See https://superuser.com/a/71890.
###
export TIMEFMT=$'\nreal\t%E\nuser\t%U\nsys\t%S'

###
### Set up alt-c to pick a commit
###
fzf-commit-widget() {
  LBUFFER="${LBUFFER}$(pick_commit)"
  local ret=$?
  zle redisplay
  typeset -f zle-line-init >/dev/null && zle zle-line-init
  return $ret
}
zle     -N    fzf-commit-widget
bindkey '\ec' fzf-commit-widget
###################

# Experimenting with nix.
# From https://nix.dev/tutorials/towards-reproducibility-pinning-nixpkgs
#  > Channels are a way of distributing Nix software, but they are being phased
#  > out. Even though they are still used by default, it is recommended to avoid
#  > channels and <nixpkgs> by always setting NIX_PATH= to be empty.
# export NIX_PATH=""
# From https://nixos.wiki/wiki/Locales:
#   > You may need to set the environmental variable LOCALE_ACHIVE to point to
#   > your system's locale-achive.
export LOCALE_ARCHIVE=/usr/lib/locale/locale-archive
# Basic idea copied from https://ianthehenry.com/posts/how-to-learn-nix/nix-zshell/
export NIX_BUILD_SHELL=nix-zshell

# I am a special snowflake
# source $HOME/.h4.zshrc
